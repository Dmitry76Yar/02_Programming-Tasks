package f03_ACMP_51_100;
	/*		Игра в числа		(Время: 1 сек. Память: 16 Мб Сложность: 23%)
Игра в числа ведётся на одномерном массиве целых положительных чисел. Перед началом, жеребьёвкой определяется, кто будет ходить
первым (первый игрок), а кто – вторым (второй игрок). Процесс игры состоит в том, что игроки по очереди (сначала первый игрок, затем\
второй, следом опять первый и так далее) вычёркивают числа из массива. Вычеркнуть можно только число, находящееся в конце или начале
оставшегося массива. При этом всегда вычёркивается максимальное число из этих двух. Если первое и последнее числа массива равны, то
вычёркивается первое. Игра продолжается до того момента, пока не будут вычеркнуты все числа. Каждое вычеркнутое число идёт в актив
тому игроку, который его вычеркнул. После окончания игры каждый игрок суммирует вычеркнутые им числа. Победителем объявляется тот,
кто наберет больше очков.
	Некоторые игроки поняли, что результат не зависит от стратегии игры, и решили попросить Вас написать программу для получения
результата.
	Входные данные
В первой строке входного файла INPUT.TXT находится одно целое число N – количество чисел в массиве (1 ≤ N ≤ 104). Во второй строке
находятся N целых положительных чисел из диапазона [1, 32000], разделённых пробелом.
	Выходные данные
В выходной файл OUTPUT.TXT выведите два числа, разделенные двоеточием. Первое число – количество очков, набираемых первым игроком
при игре на этом массиве, второе число – для второго.
	Примеры
№	INPUT.TXT	OUTPUT.TXT
1	5
	4 4 1 5 4		9:9
2	1
	1234			1234:0
*/	

import java.io.*;
import java.util.ArrayList;
import java.util.Scanner;

public class acmp_0098  {
public static void main(String[] args) throws IOException {
	Scanner sc;
	sc = new Scanner(new FileReader("C:\\JavaTXT\\ACMP_0001\\input.txt"));
	int N = sc.nextInt(); 
	ArrayList<Integer> arl = new ArrayList<Integer>();
	for (int i = 0; i<N; i++) {
		arl.add(sc.nextInt());
	}
	System.out.println(arl);
	
	int sum1 = 0;
	int sum2 = 0;
	int temp = 0;
	int count = 0;
	
	while (arl.size() !=0 ){
		count++;
		if (arl.get(0) >= arl.get(arl.size() - 1)) temp = arl.remove(0);
		else  temp = arl.remove(arl.size() - 1);
		if (count%2 != 0) sum1 = sum1 + temp;
		else sum2 = sum2 + temp;
		System.out.println("sum1 = " + sum1 + ",   sum2 =  " + sum2);
	}
	
	
	PrintWriter out = new PrintWriter(new FileWriter("C:\\JavaTXT\\ACMP_0001\\output.txt"));
    out.println(sum1 + ":" + sum2);
    out.flush();
    out.close();
}
}
