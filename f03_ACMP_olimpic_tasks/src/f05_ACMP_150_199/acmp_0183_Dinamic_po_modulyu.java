	package f05_ACMP_150_199;
/* Энты	(Время: 1 сек. Память: 16 Мб Сложность: 39%)
Энты были созданы в Первоначальную эпоху вместе с другими обитателями Средиземья. Эльфийские легенды гласят, что когда Варда зажгла
звёзды и пробудились Эльфы, вместе с ними пробудились и Энты в Великих Лесах Арды.
	Когда Энты пришли в Арду, они ещё не умели говорить — этому искусству их обучали Эльфы, и Энтам это ужасно нравилось. Им доставляло
удовольствие изучать разные языки, даже щебетание Людей.
	Эльфы выработали хорошую технику обучения энтов своему языку. Первый энт, которого обучили эльфы, выучил всего два слова
— «tancave» (да) и «la» (нет). Обученный энт выбрал одного старого и одного молодого энта, не умеющих говорить, и обучил их всем
словам, которые знал сам. Затем обучение этих двух энтов продолжили сами эльфы. Каждый обучившийся у эльфов энт снова выбирал из
неговорящих сородичей одного старого и одного молодого, обучал их всем словам, которые знал, передавал эльфам и так далее.
	Выяснилось, что более молодые энты выучивали у эльфов ещё ровно столько же слов, сколько они узнали от обучавшего их энта. 
А вот более старые, уже склонные к одеревенению энты, пополняли свой запас всего лишь одним словом. После обучения у эльфов энты до
конца света уже не могли выучить ни одного нового слова.
	Общее число энтов в Средиземье больше, чем вы думаете. Интересно, а сколько из них знают ровно 150 квенийских слов? Похожую задачу
вам предстоит решить.
	Входные данные
Входной файл INPUT.TXT содержит натуральные числа K и P (K ≤ 106; 1 ≤ P ≤ 109), записанные через пробел.
	Выходные данные
Мы понимаем, что число энтов, знающих в точности K слов, может быть слишком велико, поэтому просим вывести в выходной файл OUTPUT.TXT лишь количество энтов, знающих ровно K слов, по модулю P.

Примеры
№	INPUT.TXT	OUTPUT.TXT
1	4 10			2
2	8 10			5
3	360 1000		179*/

import java.util.*;
import java.io.*;
	 
public class acmp_0183_Dinamic_po_modulyu{
public static void main(String[] args) throws IOException {
	Scanner sc = new Scanner(new FileReader("C:\\JavaTXT\\ACMP_0001\\input.txt"));
	int K = sc.nextInt();
	int P = sc.nextInt();
	
	int[] array = new int[K+2]; 
	int res = 0;
	array[0] = array[1] = 0;
	array[2] = 1;
	for (int i = 3; i<=K; i++) {
		if (i%2 ==0) array[i] = (array[i-1] + array[i/2])%P;
		else array[i] = (array[i-1])%P;
//		System.out.println(Arrays.toString(array));
	}
	if (P==1) res = 0;
	else res = array[K];
	System.out.println("result = " + res);
	
	PrintWriter o = new PrintWriter(new FileWriter("C:\\JavaTXT\\ACMP_0001\\output.txt"));
	o.print(res);
	o.flush();
	o.close();
	}
}