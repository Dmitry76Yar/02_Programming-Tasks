package f06_ACMP_200_201;

	/* Клад		(Время: 1 сек. Память: 16 Мб Сложность: 28%)
Найти закопанный пиратами клад просто: всё, что для этого нужно – это карта. Как известно, пираты обычно рисуют карты от руки и
описывают алгоритм действий. Большая часть таких действий просто сводится к прохождению какого-то количества шагов в одном из
восьми направлений (1 – север, 2 – северо-восток, 3 – восток, 4 – юго-восток, 5 – юг, 6 – юго-запад, 7 – запад, 8 – северо-запад)
(см. рис). Длина шага в любом направлении равна 1.
	Путешествие по такому пути обычно является прекрасным способом посмотреть окрестности, однако в наше время постоянной спешки
ни у кого нет времени на это. Поэтому кладоискатели хотят идти напрямую в точку, где зарыт клад. Например, вместо того, чтобы
проходить три шага на север, один шаг на восток, один шаг на север, три шага на восток, два шага на юг и один шаг на запад,
можно пройти напрямую, использовав около 3.6 шага (см. рисунок).
	Вам необходимо узнать точку, в которой находится клад согласно указаниям пиратов.
	Входные данные
Первая строка входного файла INPUT.TXT содержит число N – число указаний (1≤N≤40). Последующие N строк содержат сами указания
– номер направления (целое число от 1 до 8) и количество шагов (целое число от 1 до 1000). Числа разделены пробелами.
	Выходные данные
В выходной файл OUTPUT.TXT выведите координаты X и Y точки (два вещественных числа, разделённые пробелом), где зарыт клад,
считая, что ось OX направлена на восток, а ось OY – на север. В начале кладоискатель должен стоять в начале координат.
Координаты необходимо вывести с точностью 10-3.
	Примеры
№	INPUT.TXT	OUTPUT.TXT
1	6
	1 3
	3 1
	1 1
	3 3
	5 2
	7 1			3.000 2.000
	2	1
	8 10	-7.071 7.071 */

import java.util.*;
import java.io.*;

public class acmp_0207{
public static void main(String[] args) throws IOException {
	Scanner sc = new Scanner(new FileReader("C:\\JavaTXT\\ACMP_0001\\input.txt"));
	int N, s, d;
	double x,y,q;
	N = sc.nextInt();
	x = y = 0;
	q = Math.sqrt(2.0);
		
	for (int i =0; i<N; i++) {
		s = sc.nextInt();
		d = sc.nextInt();
		if (s==1) y+=d;
		else if (s==2) {
			x+=d/q;
			y+=d/q;
		}
		else if (s==3) x+=d; 
		else if (s==4) {
			x+=d/q;
			y-=d/q;
		}
		else if (s==5) y-=d;
		else if (s==6) {
			x-=d/q;
			y-=d/q;
		}
		else if (s==7) x-=d;
		else {
			x-=d/q;
			y+=d/q;
		}
	}
	String a= String.format("%1."+ 3 + "f", x).replace(',', '.') + " " + String.format("%1."+ 3 + "f", y).replace(',', '.');
	System.out.println(a);
	
	PrintWriter o = new PrintWriter(new FileWriter("C:\\JavaTXT\\ACMP_0001\\output.txt"));
	o.print(a);
	o.flush();
	o.close();
}
}




